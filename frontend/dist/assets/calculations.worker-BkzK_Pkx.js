(function(){"use strict";const c=self;function u(t,s,a,e){const n=r(a-t),o=r(e-s),d=Math.sin(n/2)*Math.sin(n/2)+Math.cos(r(t))*Math.cos(r(a))*Math.sin(o/2)*Math.sin(o/2);return 6371*(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)))}function r(t){return t*(Math.PI/180)}function E(t,s,a,e,i){const n=u(t,s,a,e),o=i/(1e3*60*60),d=n/o;return Math.round(d*10)/10}function A(t,s,a=30){const e=u(t.latitude,t.longitude,s.latitude,s.longitude),i=e/a,n=Math.round(i*60),o=e<.5;return{estimated_arrival_minutes:n,distance_remaining:Math.round(e*10)/10,is_near_stop:o}}c.addEventListener("message",t=>{const{type:s,data:a}=t.data;try{switch(s){case"CALCULATE_SPEED":const{lat1:e,lon1:i,lat2:n,lon2:o,timeDiffMs:d}=a,p=E(e,i,n,o,d);c.postMessage({type:"SPEED_CALCULATED",data:p});break;case"CALCULATE_ETA":const{currentLocation:h,destination:L,averageSpeed:g}=a,C=A(h,L,g);c.postMessage({type:"ETA_CALCULATED",data:C});break;case"CALCULATE_DISTANCE":const{point1:M,point2:l}=a,T=u(M.latitude,M.longitude,l.latitude,l.longitude);c.postMessage({type:"DISTANCE_CALCULATED",data:T});break;default:c.postMessage({type:"ERROR",data:"Unknown message type"})}}catch(e){c.postMessage({type:"ERROR",data:e.message||"Unknown error"})}})})();
//# sourceMappingURL=calculations.worker-BkzK_Pkx.js.map

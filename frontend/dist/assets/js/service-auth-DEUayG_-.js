import{s as e}from"./component-driver-DClzc_eh.js";const r=new class{currentUser=null;currentSession=null;currentProfile=null;currentDriverAssignment=null;authStateChangeListener=null;_isInitialized=!1;constructor(){this.initializeAuth()}async initializeAuth(){try{const{data:{session:r},error:t}=await e.auth.getSession();if(t)return void(this._isInitialized=!0);r&&(this.currentSession=r,this.currentUser=r.user,await this.loadUserProfile(r.user.id));const{data:{subscription:s}}=e.auth.onAuthStateChange(async(e,r)=>{this.currentSession=r,this.currentUser=r?.user||null,r?.user?await this.loadUserProfile(r.user.id):this.currentProfile=null,this.authStateChangeListener&&this.authStateChangeListener()});return this._isInitialized=!0,()=>s.unsubscribe()}catch(r){this._isInitialized=!0}}async loadUserProfile(r){try{const t=this.currentUser?.user_metadata?.roles;if(t&&Array.isArray(t)&&t.length>1){const t=window.location.pathname;let s="admin";if(t.includes("/driver"))s="driver";else if(t.includes("/admin"))s="admin";else{s=["siddharthmali.211@gmail.com"].includes(this.currentUser?.email?.toLowerCase()||"")?"admin":"driver"}const{data:i,error:n}=await e.from("profiles").select("*").eq("id",r).single();return n?void this.setTemporaryProfileWithRoleCheck(r,this.currentUser):void(this.currentProfile={id:i.id,email:this.currentUser?.email||"",role:s,full_name:i.full_name,first_name:i.full_name?.split(" ")[0]||"",last_name:i.full_name?.split(" ").slice(1).join(" ")||"",created_at:i.created_at,updated_at:i.updated_at})}const{data:s,error:i}=await e.from("profiles").select("*").eq("id",r).single();if(i)return void this.setTemporaryProfileWithRoleCheck(r,this.currentUser);const n=[].includes(this.currentUser?.email?.toLowerCase()||"")?"admin":s.role;this.currentProfile={id:s.id,email:this.currentUser?.email||"",role:n,full_name:s.full_name,first_name:s.full_name?.split(" ")[0]||"",last_name:s.full_name?.split(" ").slice(1).join(" ")||"",created_at:s.created_at,updated_at:s.updated_at}}catch(t){this.setTemporaryProfileWithRoleCheck(r,this.currentUser)}}setTemporaryProfileWithRoleCheck(e,r){if(!r)return;const t=[].includes(r.email?.toLowerCase()||"")?"admin":"student";this.currentProfile={id:e,email:r.email||"",role:t,full_name:r.user_metadata?.full_name||r.email?.split("@")[0]||"User",first_name:r.user_metadata?.full_name?.split(" ")[0]||r.email?.split("@")[0]||"User",last_name:r.user_metadata?.full_name?.split(" ").slice(1).join(" ")||"",created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()}}async signIn(r,t){try{const i=e.auth.signInWithPassword({email:r,password:t}),n=new Promise((e,r)=>{setTimeout(()=>r(new Error("Authentication timeout")),5e3)}),{data:a,error:o}=await Promise.race([i,n]);if(o)return{success:!1,error:o.message};if(a?.user&&a?.session){this.currentUser={...a.user,app_metadata:{},user_metadata:a.user.user_metadata||{},aud:"authenticated",created_at:(new Date).toISOString()},this.currentSession={...a.session,refresh_token:"",expires_in:3600,token_type:"bearer",user:this.currentUser};try{const e=this.loadUserProfile(a.user.id),r=new Promise((e,r)=>{setTimeout(()=>r(new Error("Profile loading timeout")),3e3)});await Promise.race([e,r])}catch(s){this.setTemporaryProfileWithRoleCheck(a.user.id,a.user)}return this.authStateChangeListener&&this.authStateChangeListener(),{success:!0,user:this.currentProfile||void 0}}return{success:!1,error:"Authentication failed"}}catch(i){return i instanceof Error&&i.message.includes("NetworkError")?{success:!1,error:"Network connection error. Please check your internet connection and try again."}:i instanceof Error&&i.message.includes("timeout")?{success:!1,error:"Login timed out. Please try again."}:{success:!1,error:"Network error during sign in"}}}async signUp(r,t,s){try{const{data:i,error:n}=await e.auth.signUp({email:r,password:t,options:{data:{full_name:s.full_name,role:s.role||"student"}}});if(n)return{success:!1,error:n.message};if(i.user){const{error:r}=await e.from("profiles").insert({id:i.user.id,full_name:s.full_name||"Unknown User",role:s.role||"student"});return r?{success:!1,error:"Profile creation failed"}:{success:!0}}return{success:!1,error:"Registration failed"}}catch(i){return{success:!1,error:"Network error during sign up"}}}async signOut(){try{const{error:r}=await e.auth.signOut();return r?{success:!1,error:r.message}:(this.currentUser=null,this.currentSession=null,this.currentProfile=null,this.authStateChangeListener&&this.authStateChangeListener(),{success:!0})}catch(r){return{success:!1,error:"Network error during sign out"}}}getCurrentUser(){return this.currentUser}getCurrentSession(){return this.currentSession}getCurrentProfile(){return this.currentProfile}isInitialized(){return this._isInitialized}isAuthenticated(){return!!this.currentUser&&!!this.currentSession}hasRole(e){return this.currentProfile?.role===e}isAdmin(){return this.hasRole("admin")}isDriver(){return this.hasRole("driver")}isStudent(){return this.hasRole("student")}getAccessToken(){let e=this.currentSession?.access_token||null;if(!e)try{const r=["supabase.auth.token","sb-gthwmwfwvhyriygpcdlr-auth-token","supabase.auth.session"];for(const t of r){const r=localStorage.getItem(t);if(r){const t=JSON.parse(r);if(e=t?.currentSession?.access_token||t?.access_token||t?.session?.access_token||null,e)break}}}catch(r){}return e}async validateTokenForAPI(){let r=this.getAccessToken(),t=!1;if(!r)return{valid:!1,token:null,refreshed:!1};try{const{data:{user:s},error:i}=await e.auth.getUser(r);if(i||!s){if(!(await this.refreshSession()).success)return{valid:!1,token:null,refreshed:!1};r=this.getAccessToken(),t=!0}if(r){const{data:{user:s},error:i}=await e.auth.getUser(r);return i||!s?{valid:!1,token:null,refreshed:t}:{valid:!0,token:r,refreshed:t}}return{valid:!1,token:null,refreshed:t}}catch(s){return{valid:!1,token:null,refreshed:!1}}}async refreshSession(){try{if(!this.currentSession)return{success:!1,error:"No session to refresh"};const{data:r,error:t}=await e.auth.refreshSession();return t?t.message.includes("Auth session missing")?{success:!1,error:"No session to refresh"}:{success:!1,error:t.message}:r.session?(this.currentSession=r.session,this.currentUser=r.user,{success:!0}):{success:!1,error:"Session refresh failed"}}catch(r){return{success:!1,error:"Network error during session refresh"}}}async updateProfile(r){if(!this.currentUser)return{success:!1,error:"No authenticated user"};try{const{error:t}=await e.from("profiles").update(r).eq("id",this.currentUser.id);return t?{success:!1,error:t.message}:(await this.loadUserProfile(this.currentUser.id),{success:!0})}catch(t){return{success:!1,error:"Network error during profile update"}}}onAuthStateChange(e){this.authStateChangeListener=e}removeAuthStateChangeListener(){this.authStateChangeListener=null}getAuthState(){return{initialized:this._isInitialized,user:this.currentUser,session:this.currentSession,profile:this.currentProfile,isAuthenticated:this.isAuthenticated(),isAdmin:this.isAdmin()}}async forceFreshLogin(){try{const e=[];for(let r=0;r<localStorage.length;r++){const t=localStorage.key(r);t&&(t.includes("supabase")||t.includes("auth")||t.includes("sb-"))&&e.push(t)}return e.forEach(e=>{localStorage.removeItem(e)}),this.currentSession=null,this.currentUser=null,this.currentProfile=null,{success:!0}}catch(e){return{success:!1,error:"Failed to force fresh login"}}}async recoverSession(){try{const t=["supabase.auth.token","sb-gthwmwfwvhyriygpcdlr-auth-token","supabase.auth.session"];let s,i=null,n=null;for(const e of t){const r=localStorage.getItem(e);if(r){i=r,n=e;break}}if(!i)return{success:!1,error:"No stored session"};try{s=JSON.parse(i)}catch(r){return{success:!1,error:"Invalid session format"}}const a=s?.currentSession?.access_token||s?.access_token||s?.session?.access_token;if(!a)return{success:!1,error:"No access token in stored session"};const{data:{user:o},error:u}=await e.auth.getUser(a);return u||!o?(n&&localStorage.removeItem(n),{success:!1,error:"Stored token is invalid"}):(this.currentSession={access_token:a,refresh_token:s?.currentSession?.refresh_token||s?.refresh_token,expires_in:s?.currentSession?.expires_in||s?.expires_in,token_type:"bearer",user:o},this.currentUser=o,await this.loadUserProfile(o.id),{success:!0})}catch(t){return{success:!1,error:"Failed to recover session"}}}async getDriverBusAssignment(r){try{const{data:t,error:s}=await e.from("buses").select("id, number_plate, route_id").eq("assigned_driver_id",r).eq("is_active",!0).single();if(s||!t)return null;let i="";if(t.route_id){const{data:r,error:s}=await e.from("routes").select("name").eq("id",t.route_id).single();!s&&r&&(i=r.name)}let n="Unknown Driver";const{data:a,error:o}=await e.from("profiles").select("full_name").eq("id",r).single();if(!o&&a?.full_name)n=a.full_name;else{const{data:t,error:s}=await e.from("users").select("first_name, last_name").eq("id",r).single();!s&&t&&(n=`${t.first_name||""} ${t.last_name||""}`.trim()||"Unknown Driver")}return{driver_id:r,bus_id:t.id,bus_number:t.number_plate,route_id:t.route_id||"",route_name:i,driver_name:n,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()}}catch(t){return null}}async storeDriverBusAssignment(e){try{return this.currentDriverAssignment={...e,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()},!0}catch(r){return!1}}async clearDriverBusAssignment(){try{return this.currentDriverAssignment=null,!0}catch(e){return!1}}getCurrentDriverAssignment(){return this.currentDriverAssignment}async validateSession(){try{const{data:{session:r},error:t}=await e.auth.getSession();if(t)return!1;if(!r)return!1;const s=new Date(1e3*r.expires_at),i=new Date;if(s.getTime()-i.getTime()<3e5){const{data:{session:r},error:t}=await e.auth.refreshSession();if(t)return!1;r&&(this.currentSession=r,this.currentUser=r.user)}return!0}catch(r){return!1}}async validateDriverSession(){try{if(!(await this.validateSession()))return{isValid:!1,assignment:null};if(!this.currentProfile&&this.currentUser){await this.loadUserProfile(this.currentUser.id);let e=0;for(;!this.currentProfile&&e<10;)await new Promise(e=>setTimeout(e,100)),e++}if("driver"!==this.currentProfile?.role)return{isValid:!1,assignment:null};const e=await this.getDriverBusAssignment(this.currentUser.id);return e?(this.currentDriverAssignment=e,{isValid:!0,assignment:e}):{isValid:!1,assignment:null}}catch(e){return{isValid:!1,assignment:null}}}async logout(){try{this.currentUser&&"driver"===this.currentProfile?.role&&await this.clearDriverBusAssignment(),this.currentUser=null,this.currentSession=null,this.currentProfile=null,this.currentDriverAssignment=null;const{error:r}=await e.auth.signOut()}catch(r){}}};export{r as a};

import{l as t}from"./vendor-websocket-C1W36w33.js";import{a as e}from"./component-driver-DClzc_eh.js";import{v as n}from"./component-misc-MNRysRoQ.js";const i=new class{socket=null;_isConnected=!1;connectionState="disconnected";reconnectAttempts=0;maxReconnectAttempts=10;heartbeatInterval=null;connectionTimeout=null;lastHeartbeat=0;isShuttingDown=!1;connectionMonitorInterval=null;busLocationListeners=[];driverConnectedListeners=[];driverDisconnectedListeners=[];studentConnectedListeners=[];busArrivingListeners=[];constructor(){if(this.handleConnect=this.handleConnect.bind(this),this.handleDisconnect=this.handleDisconnect.bind(this),this.handleError=this.handleError.bind(this),this.handleReconnect=this.handleReconnect.bind(this),this.startHeartbeat=this.startHeartbeat.bind(this),this.stopHeartbeat=this.stopHeartbeat.bind(this),this.monitorConnection=this.monitorConnection.bind(this),"undefined"!=typeof window){this.restoreConnectionState();let t=!1;window.addEventListener("beforeunload",()=>{this.saveConnectionState(),t=!0});let e=null;document.addEventListener("visibilitychange",()=>{e&&clearTimeout(e),e=setTimeout(()=>{document.hidden?this.pauseActivity():this.resumeActivity()},500)}),window.addEventListener("focus",()=>{this.checkAndReconnectIfNeeded()}),window.addEventListener("blur",()=>{this.pauseActivity()}),window.addEventListener("load",()=>{t&&setTimeout(()=>{this.checkAndReconnectIfNeeded()},1e3)})}}handleFirefoxConnectionIssue(){setTimeout(()=>{this.isShuttingDown||"connected"===this.connectionState||this.connect()},2e3)}pauseActivity(){try{this.heartbeatInterval&&(clearInterval(this.heartbeatInterval),this.heartbeatInterval=setInterval(()=>{this.socket?.connected&&(this.socket.emit("ping"),this.lastHeartbeat=Date.now())},6e4))}catch(t){}}resumeActivity(){try{this.heartbeatInterval&&(clearInterval(this.heartbeatInterval),this.heartbeatInterval=setInterval(()=>{this.socket?.connected&&(this.socket.emit("ping"),this.lastHeartbeat=Date.now())},3e4)),this.socket&&this.socket.connected||this.connect()}catch(t){}}getWebSocketUrl(){const t=window.location.hostname;if("localhost"!==t&&"127.0.0.1"!==t&&"0.0.0.0"!==t&&!t.includes("devtunnels.ms")){return`ws://${t}:3000`}return`ws://${t}:3000`}async connect(){if(!this.socket?.connected){if("connecting"!==this.connectionState||this.socket||(this.connectionState="disconnected"),"connecting"===this.connectionState&&this.socket){if(await new Promise(t=>setTimeout(t,1e3)),this.socket.connected)return;this.socket.disconnect(),this.socket=null,this.connectionState="disconnected"}this.isShuttingDown&&(this.isShuttingDown=!1);try{this.connectionState="connecting";const e=this.getWebSocketUrl(),n=window.location.pathname;let i="student",o="BusTrackingStudent/1.0.0";n.includes("/driver")?(i="driver",o="BusTrackingDriver/1.0.0"):n.includes("/admin")&&(i="admin",o="BusTrackingAdmin/1.0.0");const s="undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.includes("Firefox");this.socket=t(e,{transports:s?["polling","websocket"]:["websocket","polling"],upgrade:!s,rememberUpgrade:!s,timeout:s?3e4:15e3,forceNew:!0,reconnection:!0,reconnectionAttempts:5,reconnectionDelay:1e3,reconnectionDelayMax:5e3,query:{clientType:i,version:"1.0.0",timestamp:Date.now().toString()},extraHeaders:{"User-Agent":o}}),this.connectionTimeout=setTimeout(()=>{"connecting"===this.connectionState&&this.handleError(new Error("Connection timeout"))},15e3),this.socket.on("connect",this.handleConnect),this.socket.on("disconnect",this.handleDisconnect),this.socket.on("connect_error",this.handleError),this.socket.on("error",this.handleError),this.socket.on("reconnect",this.handleReconnect),this.socket.on("reconnect_attempt",t=>{}),this.socket.on("reconnect_error",t=>{}),this.socket.on("reconnect_failed",()=>{this.isShuttingDown=!1,this.connectionState="disconnected"}),this.socket.on("pong",t=>{this.lastHeartbeat=Date.now()})}catch(e){this.handleError(e)}}}handleConnect(){this._isConnected=!0,this.connectionState="connected",this.reconnectAttempts=0,this.connectionTimeout&&(clearTimeout(this.connectionTimeout),this.connectionTimeout=null),this.saveConnectionState(),this.startHeartbeat(),this.startConnectionMonitoring(),this.setupBusLocationUpdateListener();"driver"===(this.socket?.io?.opts?.query?.clientType||"student")?this.socket?.emit("driver:connected",{timestamp:(new Date).toISOString(),clientInfo:{userAgent:navigator.userAgent,platform:navigator.platform,language:navigator.language}}):this.socket?.emit("student:connect",{timestamp:(new Date).toISOString(),clientInfo:{userAgent:navigator.userAgent,platform:navigator.platform,language:navigator.language}})}handleDisconnect(t){this._isConnected=!1,this.connectionState="disconnected",this.stopHeartbeat(),this.stopConnectionMonitoring(),this.connectionTimeout&&(clearTimeout(this.connectionTimeout),this.connectionTimeout=null),this.isShuttingDown||"io client disconnect"===t||this.handleReconnect()}handleError(t){if(this.connectionTimeout&&(clearTimeout(this.connectionTimeout),this.connectionTimeout=null),t&&"object"==typeof t&&"message"in t){const e=t.message;if(e.includes("interrupted while the page was loading")||e.includes("WebSocket is closed before the connection is established"))return void this.handleFirefoxConnectionIssue();if(e.includes("Driver not authenticated"))return;if(e.includes("NetworkError")||e.includes("Failed to fetch"))return void this.handleReconnect()}this.handleReconnect()}handleReconnect(){this.enhancedReconnect()}startHeartbeat(){this.heartbeatInterval&&clearInterval(this.heartbeatInterval),this.heartbeatInterval=setInterval(()=>{this.socket?.connected&&(this.socket.emit("ping"),this.lastHeartbeat=Date.now())},3e4)}stopHeartbeat(){this.heartbeatInterval&&(clearInterval(this.heartbeatInterval),this.heartbeatInterval=null)}startConnectionMonitoring(){this.connectionMonitorInterval&&clearInterval(this.connectionMonitorInterval),this.connectionMonitorInterval=setInterval(()=>{this.monitorConnection()},6e4)}stopConnectionMonitoring(){this.connectionMonitorInterval&&(clearInterval(this.connectionMonitorInterval),this.connectionMonitorInterval=null)}monitorConnection(){if(!this.socket)return;const t=this.socket.connected,e=Date.now()-this.lastHeartbeat;t&&e>12e4&&this.lastHeartbeat>0&&"reconnecting"!==this.connectionState&&(this.socket.disconnect(),this.handleReconnect()),this._isConnected!==t&&(this._isConnected=t,this.connectionState=t?"connected":"disconnected")}disconnect(){this.isShuttingDown=!0,this.connectionState="disconnected",this._isConnected=!1,this.stopHeartbeat(),this.stopConnectionMonitoring(),this.connectionTimeout&&(clearTimeout(this.connectionTimeout),this.connectionTimeout=null),this.socket&&(this.socket.disconnect(),this.socket=null),this.reconnectAttempts=0}softDisconnect(){this.connectionState="disconnected",this._isConnected=!1,this.stopHeartbeat(),this.stopConnectionMonitoring(),this.connectionTimeout&&(clearTimeout(this.connectionTimeout),this.connectionTimeout=null),this.socket&&(this.socket.disconnect(),this.socket=null),this.reconnectAttempts=0}isConnected(){return this._isConnected&&!0===this.socket?.connected}getConnectionState(){return this.connectionState}getConnectionStatus(){return this._isConnected}authenticateAsDriver(t,e){this.socket&&this.isConnected()?(this.socket.off("driver:authenticated"),this.socket.off("driver:authentication_failed"),this.socket.off("error"),this.socket.once("driver:authenticated",t=>{e?.onSuccess&&e.onSuccess(t)}),this.socket.once("driver:authentication_failed",t=>{e?.onFailure&&e.onFailure(t)}),this.socket.once("error",t=>{e?.onError&&e.onError(t)}),this.socket.emit("driver:authenticate",{token:t})):e?.onError&&e.onError(new Error("Socket not connected"))}sendLocationUpdate(t){this.socket&&this.isConnected()&&this.socket.emit("driver:locationUpdate",t)}onBusLocationUpdate(t){this.busLocationListeners.push(t),this.socket&&this.setupBusLocationUpdateListener()}setupBusLocationUpdateListener(){this.socket&&(this.socket.off("bus:locationUpdate"),this.socket.on("bus:locationUpdate",async t=>{try{const e=await n.processLocationData(t);if(e.success&&e.data){e.warnings&&e.warnings.length;const n={...e.data,eta:e.data.eta?{bus_id:e.data.busId,route_id:t.routeId||"unknown",current_location:[e.data.longitude,e.data.latitude],next_stop:e.data.eta.next_stop||"Unknown Stop",distance_remaining:e.data.eta.distance_remaining||0,estimated_arrival_minutes:e.data.eta.estimated_arrival_minutes||e.data.eta,is_near_stop:e.data.eta.is_near_stop||!1}:void 0};this.busLocationListeners.forEach(t=>{try{t(n)}catch(e){}})}else e.fallback&&this.busLocationListeners.forEach(t=>{try{t(e.fallback)}catch(n){}})}catch(e){if(t.busId&&t.latitude&&t.longitude){const e=parseFloat(t.latitude),n=parseFloat(t.longitude);if(!isNaN(e)&&!isNaN(n)&&e>=-90&&e<=90&&n>=-180&&n<=180){const i={busId:t.busId,driverId:t.driverId||"unknown",latitude:e,longitude:n,timestamp:t.timestamp||(new Date).toISOString(),speed:t.speed,heading:t.heading,eta:t.eta?{bus_id:t.busId,route_id:t.routeId||"unknown",current_location:[n,e],next_stop:t.eta.next_stop||"Unknown Stop",distance_remaining:t.eta.distance_remaining||0,estimated_arrival_minutes:t.eta.estimated_arrival_minutes||t.eta,is_near_stop:t.eta.is_near_stop||!1}:void 0};this.busLocationListeners.forEach(t=>{try{t(i)}catch(e){}})}}}}))}onDriverConnected(t){this.driverConnectedListeners.push(t),this.socket&&this.socket.on("driver:connected",t)}onDriverDisconnected(t){this.driverDisconnectedListeners.push(t),this.socket&&this.socket.on("driver:disconnected",t)}onStudentConnected(t){this.studentConnectedListeners.push(t),this.socket&&this.socket.on("student:connected",t)}onBusArriving(t){this.busArrivingListeners.push(t),this.socket&&this.socket.on("bus:arriving",t)}off(t){this.socket?.off(t)}getConnectionStats(){return{isConnected:this._isConnected,connectionState:this.connectionState,reconnectAttempts:this.reconnectAttempts,maxReconnectAttempts:this.maxReconnectAttempts,lastHeartbeat:this.lastHeartbeat,uptime:this.lastHeartbeat>0?Date.now()-this.lastHeartbeat:0}}async healthCheck(){const t=this.getConnectionStats();return{healthy:this.isConnected()&&"connected"===this.connectionState&&t.lastHeartbeat>0&&Date.now()-t.lastHeartbeat<6e4,details:{...t,socketExists:!!this.socket,socketConnected:this.socket?.connected,isShuttingDown:this.isShuttingDown}}}resetState(){this.isShuttingDown=!1,this.connectionState="disconnected",this._isConnected=!1,this.reconnectAttempts=0,this.lastHeartbeat=0}setClientType(t){this.socket?.io?.opts?.query&&(this.socket.io.opts.query.clientType=t)}async connectAs(t){this.setClientType(t),await this.connect()}async forceFreshConnection(){this.socket&&(this.socket.disconnect(),this.socket=null),this.resetState(),await new Promise(t=>setTimeout(t,1e3)),await this.connect()}saveConnectionState(){try{const t={clientType:this.socket?.io?.opts?.query?.clientType||"student",lastConnected:Date.now(),reconnectAttempts:this.reconnectAttempts,connectionState:this.connectionState,isShuttingDown:this.isShuttingDown};sessionStorage.setItem("websocket_connection_state",JSON.stringify(t))}catch(t){}}restoreConnectionState(){try{const t=sessionStorage.getItem("websocket_connection_state");if(t){const e=JSON.parse(t);Date.now()-e.lastConnected<3e5?(this.reconnectAttempts=e.reconnectAttempts||0,this.connectionState=e.connectionState||"disconnected",this.isShuttingDown=e.isShuttingDown||!1,e.clientType&&this.setClientType(e.clientType)):this.resetState()}}catch(t){this.resetState()}}checkAndReconnectIfNeeded(){this.isShuttingDown||(this.isConnected()||"connecting"===this.connectionState||"reconnecting"===this.connectionState?this.isConnected():this.handleReconnect())}enhancedReconnect(){if(this.isShuttingDown||"reconnecting"===this.connectionState)return;if(this.reconnectAttempts>=this.maxReconnectAttempts)return this.connectionState="disconnected",void sessionStorage.removeItem("websocket_connection_state");this.connectionState="reconnecting",this.reconnectAttempts++;const t=Math.min(1e3*Math.pow(2,this.reconnectAttempts-1),1e4),e=1e3*Math.random();setTimeout(()=>{this.isShuttingDown||this.connect()},t+e)}async forceReconnect(){this.socket?.connected&&this.socket.disconnect(),this.resetState(),await new Promise(t=>setTimeout(t,500)),await this.connect()}async testFirefoxConnection(){try{const n=t(e.api.websocketUrl,{transports:["websocket","polling"],timeout:1e4,forceNew:!0,autoConnect:!1});return new Promise(t=>{const e=setTimeout(()=>{n.disconnect(),t(!1)},1e4);n.on("connect",()=>{clearTimeout(e),n.disconnect(),t(!0)}),n.on("connect_error",i=>{clearTimeout(e),n.disconnect(),t(!1)}),n.connect()})}catch(n){return!1}}};export{i as w};
